/*
Base styles

Smart reset, based on @necolas's normalize but updated to use the system's real values.

markup:
<h1>Header</h1>
<p>Three years ago, the average person had no idea wh|at a drone was – o|r associated these flying machines with weapons of warfare. Things have changed. Now, unmanned aerial vehicles, or UAVs (also known as drones) have become one of the world’s most publicised and intriguing technologies, used by people in a wide range of professions, from journalism to humanitarian aid work.
Farmers have always needed accurate and up-to-date information on the health of their crops and the environmental condition of the land. Agricultural aircraft have been in use since the 1920s, while agricultural experts increasingly use satellites to assess crop health from the sky. UAVs are a natural progression from macro to micro, from large-scale to small-scale farms.
While UAVs are unlikely to entirely replace manned aircraft or satellites, they have a number of advantages over these more traditional remote-sensing methods. The technology is capable of collecting very high-resolution imagery below the cloud level, with much more detail than the satellite imagery usually available to developing country analysts. They are easy to use: most drone mapping and data-collection missions are now conducted autonomously, meaning that the drone essentially flies itself, while drone data processing tools are becoming less expensive and easier to use.
Perhaps most importantly, drones are inexpensive. In 2016 it is possible to purchase a useful mapping UAV for less than $1,000. And surprisingly powerful mapping drones can be built at home for even less. While processing software can be expensive, open-source and lower cost options exist. Thanks to these low barriers to entry, UAVs are expected to provide significant help to farmers in developing countries, who historically have found it harder to access aerial imagery, either from manned aircraft or from satellites.</p>

Styleguide 1.4
*/

//*! normalize.css v3.0.1 | MIT License | git.io/normalize *//


/*
 * 1. Apply a natural box layout model to all elements
 * 2. Remove margins from all elements
 */

* {
  &,
  &::before,
  &::after {
    box-sizing: border-box;
    margin: 0;
  }
}


/*
 * 1. Remove default margin.
 * 2. Set height to accommodate hero module
 */

html, body
{
    margin: 0; /* 1 */
    // padding: 0; /* 1 */
    height: 100%; /* 2 */
    min-height: 100%; /* 2 */
}

/*
 * 1. Set base font (family, size, line-height) for conversions to rem and/or em.
 * 2. Set default font family to sans-serif.
 * 3. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 * 4. Set background color.
 * 5. Fallback for browsers that do not support opacity
 */
html {

  $reset-font-size: px-to-pt( 12px );
  $reset-line-height: px-to-pt( rhythm(4) );

  width: 100%; /* 3 */
  background: $color-background; /* 4 */
  font: #{$font-style} #{$font-variant} #{$font-weight} #{$reset-font-size}/#{$reset-line-height} #{$font-family};
  color: $color-body; /* 5 */
  text-size-adjust: 100%; /* 3 */

  @include breakpoint("(max-width: 1280px) and (-webkit-min-device-pixel-ratio: 1), (min-resolution: 96dpi)") {
    font-size: 11pt;
  }

}

/* HTML5 display definitions
   ========================================================================== */

/*
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/*
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/*
 * 1. Remove the gray background color from active links in IE 10.
 * 2. Set default anchor colour.
 */

a {
  background: transparent;
  color: $color-anchor;
}

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/*
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/*
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/*
 * Reset the headers – their visual appearance is decoupled from their semantic meaning
 */

h1 {
  font-size: inherit;
  line-height: inherit;
  margin: 0;
}

/*
 * Address styling not present in IE 8/9.
 */

mark {
  background: $color-yellow;
  color: $color-body;
}

/*
 * Address inconsistent and variable font size in all browsers.
 */

small {
    font-size: to-unit(10px, 1em, 12px);
}

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/*
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/*
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/*
 * Reset margin
 */

figure {
  margin: 0;
}

/*
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/*
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/*
 * Reset address and em styling.
 */

address,
em {
  font-style: inherit;
}

/*
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/*
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/*
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/*
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  @include reset-appearance(button); /* 2 */
  cursor: pointer; /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/*
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/*
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/*
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/*
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type="search"] {
  @include reset-appearance(textfield); /* 1 */
  // is already set in wildcard rule /* 2 */
}

/*
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  @include reset-appearance(none);
}

/*
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 0;
  margin: 0 rhythm();
  padding: 0;
  &--reset {
    border: 0;
    margin: 0;
    padding: 0;
  }
}

/*
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/*
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/*
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/*
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
-----------------------------------------------------------------------------
Miscellaneous
-----------------------------------------------------------------------------
*/

p {
  margin: 0;
}

abbr[title] {
    border-bottom: 1px dotted;
}
hr {
    height: 0;
}
code,
kbd,
pre,
samp {
    @include font-family($monospace-regular);
    @include font-size($font-size);
}
pre {
    white-space: pre-wrap;
}
sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
sup {
    top: -0.5em;
}
sub {
    bottom: -0.25em;
}

/*
 * Set consistent quote types.
 */
q {
    quotes: "\201C" "\201D" "\2018" "\2019";
    &--reset {
      quotes: "";
    }
}

// a {
//     text-decoration: none;
//     &.reset {
//       color: inherit;
//     }
//     &:visited {
//         color: $color-anchor--visited;
//     }
//     &:hover,
//     &:visited:hover {
//         color: $color-anchor--hover;
//     }
//     &:active {
//         color: $color-anchor--active;
//     }
// }


/*
 * Reset list
 */
fieldset,
ol, ul, dl {
  &.reset {
    margin: 0;
    padding: 0;
  }
}
ol, ul {
  &.reset {
    list-style: none;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 300;
  font-size: 1em;
}

p,
fieldset,
figure {
  &.reset {
    margin: 0;
  }
}
fieldset {
  &.reset {
    border: 0;
  }
}

button,
input {
    &.reset {
      background: none;
      border: 0;
      padding: 0;
    }
}

label {
  display: inline-block;
}

label,
input,
select,
textarea {
  width: 100%;
}
input[type="checkbox"]
input[type="radio"] {
  width: initial;
}
